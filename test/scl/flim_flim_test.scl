configuration for "PIC18F2480" is
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 1609 ms;
      report("flim_flim_test: TIMEOUT");
      report(PC); -- Crashes simulator, MDB will report current source line
      PC <= 0;
      wait;
    end process test_timeout;
    --
  flim_flim_test: process is
    type test_result is (pass, fail);
    variable test_state : test_result;
    variable test_sidh : integer;
    variable test_sidl : integer;
    begin
      report("flim_flim_test: START");
      test_state := pass;
      RA3 <= '1'; -- Setup button not pressed
      RB4 <= '1'; -- DOLEARN off
      RA5 <= '1'; -- UNLEARN off
      --
      wait until RB6 == '1';
      report("flim_flim_test: Booted into FLiM");
      --
      RA3 <= '0'; -- Setup button pressed
      wait for 1 sec;
      RA3 <= '1'; -- Setup button released
      --
      wait until TXB1CON.TXREQ == '1';
      if TXB1DLC.TXRTR != '1' then
        report("flim_flim_test: not RTR request");
        test_state := fail;
      end if;
      report("flim_flim_test: RTR request");
      if TXB1SIDH != 16#BF# then
        report("flim_flim_test: Incorrect default SIDH");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#E0# then
        report("flim_flim_test: Incorrect default SIDL");
        test_state := fail;
      end if;
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#50# then -- RQNN, CBUS request node number
        report("flim_flim_test: Sent wrong request");
        test_state := fail;
      end if;
      report("flim_flim_test: RQNN request");
      if TXB1SIDH != 16#B0# then
        report("flim_flim_test: Incorrect new SIDH");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#20# then
        report("flim_flim_test: Incorrect new SIDL");
        test_state := fail;
      end if;
      if TXB1D1 != 4 then
        report("flim_flim_test: NN request wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 2 then
        report("flim_flim_test: NN request wrong Node Number (low)");
        test_state := fail;
      end if;
      --
      wait for 1 ms; -- FIXME Next packet lost if previous Tx not yet completed
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      RXB0D0 <= 16#42#; -- SNN, CBUS set node number
      RXB0D1 <= 9;      -- New NN high
      RXB0D2 <= 8;      -- New NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#52# then -- NNACK, CBUS node number acknowledge
        report("flim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      report("flim_flim_test: Node number response");
      if TXB1D1 != 9 then
        report("flim_flim_test: NN acknowledge wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 8 then
        report("flim_flim_test: NN acknowledge wrong Node Number (low)");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#20# then
        report("flim_flim_test: NN acknowledge wrong CAN Id, SIDL");
        test_state := fail;
      end if;
      if TXB1SIDH != 16#B0# then
        report("flim_flim_test: NN acknowledge wrong CAN Id, SIDH");
        test_state := fail;
      end if;
      --
      if RB6 == '0' then
        wait until RB6 == '1';
      end if;
      report("flim_flim_test: Yellow LED (FLiM) on");
      --
      if RB7 == '1' then
        report("flim_flim_test: Green LED (SLiM) on");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("flim_flim_test: PASS");
      else
        report("flim_flim_test: FAIL");
      end if;          
      PC <= 0;
      wait;
    end process flim_flim_test;
end testbench;

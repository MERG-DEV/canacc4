configuration for "PIC18F2480" is
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 879 ms;
      report("slim_node_flags_test: TIMEOUT");
      report(PC); -- Crashes simulator, MDB will report current source line
      PC <= 0;
      wait;
    end process test_timeout;
    --
  slim_node_flags_test: process is
    type test_result is (pass, fail);
    variable test_state : test_result;
    variable flags_index : integer;
    begin
      report("slim_node_flags_test: START");
      test_state := pass;
      RA3 <= '1'; -- Setup button not pressed
      flags_index := 8; -- Index of node flags
      --
      wait until RB7 == '1'; -- Booted into SLiM
      --
      RXB0D0 <= 16#73#;      -- RQNPN, CBUS read node parameter by index
      RXB0D1 <= 4;           -- NN high
      RXB0D2 <= 2;           -- NN low
      RXB0D3 <= flags_index; -- Parameter index, 8 == node flags
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1' for 2 ms; -- Test if response sent
      if TXB1CON.TXREQ == '1' then
        report("slim_node_flags_test: Unexpected response");
        test_state := fail;
      end if;
      --
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      RXB0D0 <= 16#73#;      -- RQNPN, CBUS read node parameter by index
      RXB0D1 <= 0;           -- NN high
      RXB0D2 <= 0;           -- NN low
      RXB0D3 <= flags_index; -- Parameter index, 8 == node flags
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#9B# then -- PARAN, CBUS individual parameter response
        report("slim_node_flags_test: Sent wrong response");
        test_state := fail;
      end if;
      if TXB1D1 != 0 then
        report("slim_node_flags_test: Sent wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 0 then
        report("slim_node_flags_test: Sent wrong Node Number (low)");
        test_state := fail;
      end if;
      if TXB1D3 != flags_index then
        report("slim_node_flags_test: Sent wrong parameter index");
        test_state := fail;
      end if;
      if TXB1D4 != 9 then
        report("slim_node_flags_test: Sent wrong node flags");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("slim_node_flags_test: PASS");
      else
        report("slim_node_flags_test: FAIL");
      end if;          
      PC <= 0;
      wait;
    end process slim_node_flags_test;
end testbench;

configuration for "PIC18F2480" is
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 23000 ms;
      report("slim_flim_test: TIMEOUT");
      report(PC);
      PC <= 0;
      wait;
    end process test_timeout;
    --
  slim_flim_test: process is
    type test_result is (pass, fail);
    variable test_state : test_result;
    variable test_sidh : integer;
    variable test_sidl : integer;
    begin
      report("slim_flim_test: START");
      test_state := pass;
      RA3 <= '1'; -- Setup button not pressed
      --
      wait until RB7 == '1'; -- Booted into SLiM
      report("slim_flim_test: Green LED (SLiM) on");
      --
      RA3 <= '0'; -- Setup button pressed
      wait until RB7 == '0';
      report("slim_flim_test: FLiM setup started");
      --
      RA3 <= '1'; -- Setup button released
      wait until TXB1CON.TXREQ == '1';
      if TXB1DLC.TXRTR == '1' then
        report("slim_flim_test: RTR request");
      else
        report("slim_flim_test: not RTR request");
        test_state := fail;
      end if;
      if TXB1SIDH != 16#BF# then
        report("slim_flim_test: Incorrect default SIDH");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#E0# then
        report("slim_flim_test: Incorrect default SIDL");
        test_state := fail;
      end if;
      --
      test_sidh := 0;
      test_sidl := 16#20#;
        while test_sidl < 16#100# loop
          RXB0SIDH <= test_sidh;
          RXB0SIDL <= test_sidl;
          RXB0CON.RXFUL <= '1';
          RXB0DLC <= 0;
          CANSTAT <= 16#0C#;
          PIR3.RXB0IF <= '1';
          wait until RXB0CON.RXFUL == '0';
          test_sidl := test_sidl + 16#20#;
        end loop;
        test_sidh := test_sidh + 1;
        test_sidl := 0;
        while test_sidl < 16#80# loop
          RXB0SIDH <= test_sidh;
          RXB0SIDL <= test_sidl;
          RXB0CON.RXFUL <= '1';
          RXB0DLC <= 0;
          CANSTAT <= 16#0C#;
          PIR3.RXB0IF <= '1';
          wait until RXB0CON.RXFUL == '0';
          test_sidl := test_sidl + 16#20#;
      end loop;
      report("slim_flim_test: RTR, first eleven CAN Ids taken");
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#50# then -- Expect NN ack request
        report("slim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      if TXB1D1 != 0 then
        report("slim_flim_test: NN ack wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 0 then
        report("slim_flim_test: NN ack wrong Node Number (low)");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#80# then
        report("slim_flim_test: NN ack wrong CAN Id, SIDL");
        test_state := fail;
      end if;
      if TXB1SIDH != 16#B1# then
        report("slim_flim_test: NN ack wrong CAN Id, SIDH");
        test_state := fail;
      end if;
      --
      RXB0D0 <= 16#42#; -- CBUS set NN command
      RXB0D1 <= 4;      -- New NN high
      RXB0D2 <= 2;      -- New NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#52# then -- Expect NN rel request
        report("slim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      if TXB1D1 != 4 then
        report("slim_flim_test: NN rel wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 2 then
        report("slim_flim_test: NN rel wrong Node Number (low)");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#80# then
        report("slim_flim_test: NN rel wrong CAN Id, SIDL");
        test_state := fail;
      end if;
      if TXB1SIDH != 16#B1# then
        report("slim_flim_test: NN rel wrong CAN Id, SIDH");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("slim_flim_test: PASS");
      else
        report("slim_flim_test: FAIL");
      end if;          
      PC <= 0;
      wait;
    end process slim_flim_test;
end testbench;

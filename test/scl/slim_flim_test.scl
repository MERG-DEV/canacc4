configuration for "PIC18F2480" is
  shared label    main_loop;
  shared label    setup;
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 29376 ms;
      report("slim_flim_test: TIMEOUT");
      report(PC); -- Crashes simulator, MDB will report current source line
      PC <= 0;
      wait;
    end process test_timeout;
    --
  slim_flim_test: process is
    type test_result is (pass, fail);
    variable test_state : test_result;
    variable test_sidh : integer;
    variable test_sidl : integer;
    begin
      report("slim_flim_test: START");
      test_state := pass;
      RA3 <= '1'; -- Setup button not pressed
      RB4 <= '1'; -- DOLEARN off
      RA5 <= '1'; -- UNLEARN off
      --
      wait until RB7 == '1'; -- Booted into SLiM
      report("slim_flim_test: Green LED (SLiM) on");
      --
      RA3 <= '0'; -- Setup button pressed
      wait until RB7 == '0';
      report("slim_flim_test: FLiM setup started");
      --
      RA3 <= '1'; -- Setup button released
      wait until TXB1CON.TXREQ == '1';
      if TXB1DLC.TXRTR != '1' then
        report("slim_flim_test: not RTR request");
        test_state := fail;
      end if;
      report("slim_flim_test: RTR request");
      if TXB1SIDH != 16#BF# then
        report("slim_flim_test: Incorrect default SIDH");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#E0# then
        report("slim_flim_test: Incorrect default SIDL");
        test_state := fail;
      end if;
      --
      test_sidh := 0;
      test_sidl := 16#20#;
        while test_sidl < 16#100# loop
          RXB0SIDH <= test_sidh;
          RXB0SIDL <= test_sidl;
          RXB0CON.RXFUL <= '1';
          RXB0DLC <= 0;
          CANSTAT <= 16#0C#;
          PIR3.RXB0IF <= '1';
          wait until RXB0CON.RXFUL == '0';
          test_sidl := test_sidl + 16#20#;
        end loop;
        test_sidh := 1;
        test_sidl := 0;
        while test_sidl < 16#80# loop
          RXB0SIDH <= test_sidh;
          RXB0SIDL <= test_sidl;
          RXB0CON.RXFUL <= '1';
          RXB0DLC <= 0;
          CANSTAT <= 16#0C#;
          PIR3.RXB0IF <= '1';
          wait until RXB0CON.RXFUL == '0';
          test_sidl := test_sidl + 16#20#;
        end loop;
      RXB0SIDH <= test_sidh;
      RXB0SIDL <= 16#A0#;
      RXB0CON.RXFUL <= '1';
      RXB0DLC <= 0;
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      report("slim_flim_test: RTR, first free CAN Id is 12");
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#50# then -- RQNN, CBUS request node number
        report("slim_flim_test: Sent wrong request");
        test_state := fail;
      end if;
      report("slim_flim_test: RQNN request");
      if TXB1SIDH != 16#B1# then
        report("slim_flim_test: Incorrect new SIDH");
        test_state := fail;
      end if;
      if TXB1SIDL != 16#80# then
        report("slim_flim_test: Incorrect new SIDL");
        test_state := fail;
      end if;
      if TXB1D1 != 0 then
        report("slim_flim_test: NN request wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 0 then
        report("slim_flim_test: NN request wrong Node Number (low)");
        test_state := fail;
      end if;
      --
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      RXB0D0 <= 16#10#; -- RQNP, CBUS node parameters request
      RXB0D1 <= 0;      -- NN high
      RXB0D2 <= 0;      -- NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#EF# then -- PARAMS, CBUS node parameters response
        report("slim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      report("slim_flim_test: Params response");
      if TXB1D1 != 165 then
        report("slim_flim_test: Sent wrong manufacturer id");
        test_state := fail;
      end if;
      if TXB1D2 != 114 then -- r
        report("slim_flim_test: Sent wrong minor version");
        test_state := fail;
      end if;
      if TXB1D3 != 8 then
        report("slim_flim_test: Sent wrong module id");
        test_state := fail;
      end if;
      if TXB1D4 != 128 then
        report("slim_flim_test: Sent wrong number of events allowed");
        test_state := fail;
      end if;
      if TXB1D5 != 2 then
        report("slim_flim_test: Sent wrong number of variables per event");
        test_state := fail;
      end if;
      if TXB1D6 != 16 then
        report("slim_flim_test: Sent wrong number of node variables");
        test_state := fail;
      end if;
      if TXB1D7 != 2 then
        report("slim_flim_test: Sent wrong major version");
        test_state := fail;
      end if;
      --
      wait for 1 ms; -- FIXME Next packet lost if previous Tx not yet completed
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      RXB0D0 <= 16#11#; -- RQMN, CBUS module name request
      RXB0D1 <= 0;      -- NN high
      RXB0D2 <= 0;      -- NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      report("slim_flim_test: Name request");
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#E2# then -- NAME, CBUS module name response
        report("slim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      report("slim_flim_test: Name response");
      if TXB1D1 != 65 then -- A
        report("slim_flim_test: Sent wrong name [0]");
        test_state := fail;
      end if;
      if TXB1D2 != 67 then -- C
        report("slim_flim_test: Sent wrong name [1]");
        test_state := fail;
      end if;
      if TXB1D3 != 67 then -- C
        report("slim_flim_test: Sent wrong name [2]");
        test_state := fail;
      end if;
      if TXB1D4 != 52 then -- 4
        report("slim_flim_test: Sent wrong name [3]");
        test_state := fail;
      end if;
      if TXB1D5 != 95 then -- _
        report("slim_flim_test: Sent wrong name [4]");
        test_state := fail;
      end if;
      if TXB1D6 != 50 then -- 2
        report("slim_flim_test: Sent wrong name [5]");
        test_state := fail;
      end if;
      if TXB1D7 != 32 then -- ' '
        report("slim_flim_test: Sent wrong name [6]");
        test_state := fail;
      end if;
      --
      wait until RB6 == '1';
      wait until RB6 == '0';
      wait until RB6 == '1';
      wait until RB6 == '0';
      report("slim_flim_test: Yellow LED (FLiM) flashing");
      --
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      RXB0D0 <= 16#42#; -- SNN, CBUS set node number
      RXB0D1 <= 4;      -- New NN high
      RXB0D2 <= 2;      -- New NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#52# then -- NNACK, CBUS node number acknowledge
        report("slim_flim_test: Sent wrong response");
        test_state := fail;
      end if;
      report("slim_flim_test: Node number response");
      if TXB1SIDL != 16#80# then
        report("slim_flim_test: NN acknowledge wrong CAN Id, SIDL");
        test_state := fail;
      end if;
      if TXB1SIDH != 16#B1# then
        report("slim_flim_test: NN acknowledge wrong CAN Id, SIDH");
        test_state := fail;
      end if;
      if TXB1D1 != 4 then
        report("slim_flim_test: NN acknowledge wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 2 then
        report("slim_flim_test: NN acknowledge wrong Node Number (low)");
        test_state := fail;
      end if;
      --
      wait until RB6 == '1';
      report("slim_flim_test: Yellow LED (FLiM) now on");
      --
      if RB7 == '1' then
        report("slim_flim_test: Green LED (SLiM) on");
        test_state := fail;
      end if;
      --
      report("slim_flim_test: Restart");
      wait until PC == main_loop;
      PC <= setup;
      --
      if RB6 == '1' then
        wait until RB6 == '0';
      end if;
      wait until RB6 == '1';
      report("slim_flim_test: Yellow LED (FLiM) back on");
      --
      if RXB0CON.RXFUL != '0' then
        wait until RXB0CON.RXFUL == '0';
      end if;
      report("slim_flim_test: Check Node Number and event space after restart");
      RXB0D0 <= 16#56#;    -- NNEVN, CBUS request available event space
      RXB0D1 <= 4;         -- NN high
      RXB0D2 <= 2;         -- NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1';
      if TXB1D0 != 16#70# then -- EVLNF, CBUS available event space response
        report("flim_boot_test: Sent wrong response");
        test_state := fail;
      end if;
      if TXB1D1 != 4 then
        report("flim_boot_test: Sent wrong Node Number (high)");
        test_state := fail;
      end if;
      if TXB1D2 != 2 then
        report("flim_boot_test: Sent wrong Node Number (low)");
        test_state := fail;
      end if;
      if TXB1D3 != 123 then
        report("flim_boot_test: Sent wrong available event space");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("slim_flim_test: PASS");
      else
        report("slim_flim_test: FAIL");
      end if;          
      PC <= 0;
      wait;
    end process slim_flim_test;
end testbench;

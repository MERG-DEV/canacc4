configuration for "PIC18F2480" is
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 10000 ms;
      report("flim_index_events_test: TIMEOUT");
      report(PC); -- Crashes simulator, MDB will report current source line
      PC <= 0;
      wait;
    end process test_timeout;
    --
  flim_index_events_test: process is
    type test_result is (pass, fail);
    variable test_state  : test_result;
    variable event_index : integer;
    file     event_file  : text;
    variable file_stat   : file_open_status;
    variable file_line   : string;
    variable line_val    : integer;
    begin
      report("flim_index_events_test: START");
      test_state := pass;
      RA3 <= '1'; -- Setup button not pressed
      RB4 <= '1'; -- Learn off
      RA5 <= '1'; -- Unlearn off
      --
      wait until RB6 == '1'; -- Booted into FLiM
      --
      RXB0D0 <= 16#57#; -- QNN, CBUS Read events request
      RXB0D1 <= 0;      -- NN high
      RXB0D2 <= 0;      -- NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1' for 776 ms; -- Test if response sent
      if TXB1CON.TXREQ == '1' then
        report("flim_index_events_test: Unexpected response");
        test_state := fail;
      end if;
      --
      wait for 1 ms; -- FIXME Next packet lost if previous Tx not yet completed
      RXB0D0 <= 16#57#; -- QNN, CBUS Read events request
      RXB0D1 <= 4;      -- NN high
      RXB0D2 <= 2;      -- NN low
      RXB0CON.RXFUL <= '1';
      RXB0DLC.DLC3 <= '1';
      CANSTAT <= 16#0C#;
      PIR3.RXB0IF <= '1';
      --
      report("flim_index_events_test: Read events");
      file_open(file_stat, event_file, "./data/stored_events.dat", read_mode);
      if file_stat != open_ok then
        report("flim_index_events_test: Failed to open event data file");
        report("flim_index_events_test: FAIL");
        PC <= 0;
        wait;
      end if;
      --
      event_index := 1;
      while endfile(event_file) == false loop
        readline(event_file, file_line);
        report(file_line);
        --
        TXB1CON.TXREQ <= '0';
        wait until TXB1CON.TXREQ == '1';
        if TXB1D0 != 16#F2# then -- ENRSP, CBUS stored event response
          report("flim_index_events_test: Sent wrong response");
          test_state := fail;
        end if;
        if TXB1D1 != 4 then
          report("flim_index_events_test: Sent wrong Node Number (high)");
          test_state := fail;
        end if;
        if TXB1D2 != 2 then
          report("flim_index_events_test: Sent wrong Node Number (low)");
          test_state := fail;
        end if;
        readline(event_file, file_line);
        read(file_line, line_val);
        if TXB1D3 != line_val then
          report("flim_index_events_test: Sent wrong Event Node Number (high)");
          test_state := fail;
        end if;
        readline(event_file, file_line);
        read(file_line, line_val);
        if TXB1D4 != line_val then
          report("flim_index_events_test: Sent wrong Event Node Number (low)");
          test_state := fail;
        end if;
        readline(event_file, file_line);
        read(file_line, line_val);
        if TXB1D5 != line_val then
          report("flim_index_events_test: Sent wrong Event Number (high)");
          test_state := fail;
        end if;
        readline(event_file, file_line);
        read(file_line, line_val);
        if TXB1D6 != line_val then
          report("flim_index_events_test: Sent wrong Event Number (low)");
          test_state := fail;
        end if;
        if TXB1D7 != event_index then
          report("flim_index_events_test: Sent wrong Event Index");
          test_state := fail;
        end if;
        --
        while match(file_line, "Done") == false loop
          readline(event_file, file_line);
        end loop;
        --
        event_index := event_index + 1;
      end loop;
      --
      TXB1CON.TXREQ <= '0';
      wait until TXB1CON.TXREQ == '1' for 776 ms; -- Test if response sent
      if TXB1CON.TXREQ == '1' then
        report("flim_index_events_test: Unexpected response");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("flim_index_events_test: PASS");
      else
        report("flim_index_events_test: FAIL");
      end if;          
      PC <= 0;
      wait;
    end process flim_index_events_test;
end testbench;

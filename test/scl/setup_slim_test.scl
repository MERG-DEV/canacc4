configuration for "PIC18F2480" is
  shared label _CANInit;
  shared label setup;
  shared label copyEVs;
  shared label initevdata;
  shared label slimset;
  shared label nv_rest;
  shared label timload;
  shared label main0;
end configuration;
--
testbench for "PIC18F2480" is
begin
  test_timeout: process is
    begin
      wait for 2000 ms;
      report("setup_slim_test: TIMEOUT");
      report(PC); -- Crashes simulator, MDB will report current source line
      PC <= 0;
      wait;
    end process test_timeout;
    --
  setup_slim_test: process is
    type test_result is (pass, fail);
    variable test_state : test_result;
    begin
      report("setup_slim_test: START");
      test_state := pass;
      --
      wait until PC == _CANInit;
      report("setup_slim_test: Reached _CANInit");
      --
      accessin("eedata/boot_setup", hex_mode, EEDATA, false);
      --
      wait until PC == setup;
      report("setup_slim_test: Reached setup");
      --
      wait until PC == copyEVs;
      report("setup_slim_test: Reached copyEVs");
      accessin("eedata/no_freechain_0_events", hex_mode, EEDATA, false);
      wait until PC == initevdata;
      report("setup_slim_test: Reached initevdata");
      accessin("eedata/modstat_slim", hex_mode, EEDATA, false);
      --
      wait until PC == slimset;
      report("setup_slim_test: Reached slimset");
      --
      RB4 <= '1'; -- DOLEARN off
      RA5 <= '1'; -- UNLEARN off
      --
      wait until PC == nv_rest;
      report("setup_slim_test: Reached nv_rest");
      accessin("eedata/default_timers", dec_mode, EEDATA, false);
      --
      wait until PC == timload;
      report("setup_slim_test: Reached timload");
      accessin("eedata/default_nv", dec_mode, EEDATA, false);
      --
      wait until PC == main0;
      report("setup_slim_test: Reached main0");
      --
      if RB6 == '1' then
        report("setup_slim_test: Yellow LED (FLiM) on");
        test_state := fail;
      end if;
      if RB7 == '0' then
        report("setup_slim_test: Green LED (SLiM) off");
        test_state := fail;
      end if;
      --
      if test_state == pass then
        report("setup_slim_test: PASS");
      else
        report("setup_slim_test: FAIL");
        report(PC); -- Crashes simulator, MDB will report current source line
      end if;          
      PC <= 0;
      wait;
    end process setup_slim_test;
end testbench;
